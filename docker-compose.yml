services:
  database:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: xxxxxxxx
      MYSQL_DATABASE: xxxxxxxx
      MYSQL_USER: xxxxxxxx
      MYSQL_PASSWORD: xxxxxxxx
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uxxxxxxxx -p$$MYSQL_ROOT_PASSWORD --silent || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 20s
    expose:
      - "3306"

  cache:
    image: redis:6-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s
    expose:
      - "6379"

  socket:
    image: socketcluster/socketcluster:v17.4.0
    restart: unless-stopped
    environment:
      SOCKETCLUSTER_WORKERS: 4
      SOCKETCLUSTER_BROKERS: 4
    expose:
      - "8000"

  application:
    image: fleetbase/fleetbase-api:latest
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    environment:
      APP_NAME: xxxxxxxx
      APP_ENV: production
      APP_DEBUG: "false"
      APP_KEY: base64:xxxxxxxx
      APP_URL: https://xxxxxxxx
      LOG_CHANNEL: daily
      CONSOLE_HOST: https://xxxxxxxx
      FRONTEND_HOSTS: https://xxxxxxxx

      # maps
      MAPS_VENDOR: mapbox
      MAPBOX_ACCESS_TOKEN: xxxxxxxx
      # Optional tuning
      MAPBOX_DIRECTIONS_PROFILE: driving
      MAPBOX_MATRIX_PROFILE: driving
      MAPBOX_COUNTRY_BIAS: NG

      # ---- DB (internal) ----
      DB_CONNECTION: mysql
      DB_HOST: database
      DB_PORT: 3306
      DB_DATABASE: xxxxxxxx
      DB_USERNAME: xxxxxxxx
      DB_PASSWORD: xxxxxxxx

      # Use same DB for storefront
      STOREFRONT_DB_CONNECTION: mysql
      DB_STOREFRONT_HOST: database
      DB_STOREFRONT_PORT: 3306
      DB_STOREFRONT_DATABASE: xxxxxxxx
      DB_STOREFRONT_USERNAME: xxxxxxxx
      DB_STOREFRONT_PASSWORD: xxxxxxxx

      # ---- Redis/queue ----
      QUEUE_CONNECTION: redis
      CACHE_DRIVER: redis
      REDIS_CLIENT: phpredis
      REDIS_HOST: cache
      REDIS_PORT: 6379
      CACHE_URL: redis://cache:6379
      REDIS_URL: redis://cache:6379

      # Auth/cookies across subdomains
      SESSION_DOMAIN: xxxxxxxx
      SESSION_SECURE_COOKIE: "true"
      SESSION_SAME_SITE: lax
      SANCTUM_STATEFUL_DOMAINS: xxxxxxxx
      TRUSTED_PROXIES: "*"

      # Safe mail default so flows never 500 on SMTP
      MAIL_MAILER: smtp
      MAIL_HOST: xxxxxxxx  # <â€” use your SES region
      MAIL_PORT: 587                                   # 587 (STARTTLS) is best on AWS; 465 also works
      MAIL_ENCRYPTION: tls                             # tls for 587, ssl for 465
      MAIL_USERNAME: "xxxxxxxx"
      MAIL_PASSWORD: "xxxxxxxx"
      MAIL_FROM_ADDRESS: "xxxxxxxx"        # must be a verified SES identity
      MAIL_FROM_NAME: "xxxxxxxx"

      # Optional defaults
      BROADCAST_DRIVER: socketcluster
      REGISTRY_HOST: https://registry.fleetbase.io
      REGISTRY_PREINSTALLED_EXTENSIONS: "true"
      OSRM_HOST: https://router.project-osrm.org
    expose:
      - "8000"

  queue:
    image: fleetbase/fleetbase-api:latest
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    command: ["php","artisan","queue:work","--tries=3","--timeout=90"]
    environment:
      DB_CONNECTION: mysql
      DB_HOST: database
      DB_PORT: 3306
      DB_DATABASE: xxxxxxxx
      DB_USERNAME: xxxxxxxx
      DB_PASSWORD: xxxxxxxx
      QUEUE_CONNECTION: redis
      REDIS_HOST: cache
      REDIS_PORT: 6379

  scheduler:
    image: fleetbase/fleetbase-api:latest
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    command: ["go-crond","--verbose","root:./crontab"]
    environment:
      DB_CONNECTION: mysql
      DB_HOST: database
      DB_PORT: 3306
      DB_DATABASE: xxxxxxxx
      DB_USERNAME: xxxxxxxx
      DB_PASSWORD: xxxxxxxx
      QUEUE_CONNECTION: redis
      REDIS_HOST: cache
      REDIS_PORT: 6379

  console:
    image: fleetbase/fleetbase-console:latest
    restart: unless-stopped
    environment:
      MAPS_PROVIDER: mapbox
      MAPBOX_TOKEN: xxxxxxxx
    volumes:
      - ./console/fleetbase.config.json:/usr/share/nginx/html/fleetbase.config.json:ro
    expose:
      - "4200"

  phpmyadmin:
    image: phpmyadmin:5-apache
    restart: unless-stopped
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      UPLOAD_LIMIT: 128M
    expose:
      - "80"

  caddy:
    image: caddy:2
    restart: unless-stopped
    depends_on:
      application:
        condition: service_started
      console:
        condition: service_started
      socket:
        condition: service_started
      phpmyadmin:
        condition: service_started
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.edge:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
      - caddy-config:/config

volumes:
  caddy-data:
  caddy-config: